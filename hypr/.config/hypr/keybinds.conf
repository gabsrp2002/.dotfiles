$terminal = uwsm app -- kitty --single-instance -d ~ -e tmux new -A -s default
$fileManager = uwsm app -- kitty -e yazi
$menu = rofi -show combi -combi-modi drun,calc:~/.scripts/show_calc,caf:~/.scripts/toggle_caffeine -run-command "uwsm app -- {cmd}"
$emojiPicker = rofi -modi emoji -show emoji

$mainMod = ALT

bind = CTRL SHIFT, T, exec, $terminal
bind = SUPER, Q, killactive,
bind = SUPER, E, exec, $fileManager
bind = $mainMod, r, exec, hyprctl reload; pkill waybar; hyprctl dispatch exec waybar; pkill swayosd-server; hyprctl dispatch exec swayosd-server
bind = $mainMod, f, fullscreen
bind = $mainMod, V, togglefloating,
bind = SUPER, SPACE, exec, $menu
bind = CTRL SUPER, SPACE, exec, $emojiPicker
# bind = $mainMod, P, pseudo, # dwindle
# bind = $mainMod, J, togglesplit, # dwindle

# Take screenshot
bind = SHIFT SUPER, 3, exec, hyprshot -m active -m output
bind = SHIFT SUPER, 4, exec, hyprshot -m region
bind = SHIFT SUPER, 5, exec, ~/.scripts/record

# Move focus with mainMod + homerow
bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d
bind = $mainMod, t, exec, $(hyprctl activewindow -j | jq '.floating') && hyprctl dispatch cyclenext tiled || hyprctl dispatch cyclenext floating

# Move windows with SHIFT + mainMod + homerow
bind = SHIFT $mainMod, h, movewindow, l
bind = SHIFT $mainMod, l, movewindow, r
bind = SHIFT $mainMod, k, movewindow, u
bind = SHIFT $mainMod, j, movewindow, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, n, workspace, m+1
bind = $mainMod, p, workspace, m-1

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, n, movetoworkspace, m+1
bind = $mainMod SHIFT, p, movetoworkspace, m-1
bind = $mainMod, c, movetoworkspace, emptynm

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Wifi and bluetooth
bind = $mainMod, w, exec, networkmanager_dmenu -i
bind = $mainMod, b, exec, ~/.scripts/rofi-bluetooth -i

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys for volume and LCD brightness
# bindel = ,XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +5%
# bindel = ,XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -5%
# bindel = ,XF86AudioMute, exec, pactl set-sink-mute @DEFAULT_SINK@ toggle
# bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
# bindel = ,XF86MonBrightnessUp, exec, brightnessctl -e4 -n2 set 5%+
# bindel = ,XF86MonBrightnessDown, exec, brightnessctl -e4 -n2 set 5%-
bindel = ,XF86AudioRaiseVolume, exec, swayosd-client --output-volume raise --monitor "$(hyprctl monitors -j | jq -r '.[] | select(.focused == true).name')"
bindel = ,XF86AudioLowerVolume, exec, swayosd-client --output-volume lower --monitor "$(hyprctl monitors -j | jq -r '.[] | select(.focused == true).name')"
bindel = ,XF86AudioMute, exec, swayosd-client --output-volume mute-toggle --monitor "$(hyprctl monitors -j | jq -r '.[] | select(.focused == true).name')"
bindel = ,XF86AudioMicMute, exec, swayosd-client --input-volume mute-toggle --monitor "$(hyprctl monitors -j | jq -r '.[] | select(.focused == true).name')"
bindel = ,XF86MonBrightnessUp, exec, swayosd-client --brightness raise --monitor "$(hyprctl monitors -j | jq -r '.[] | select(.focused == true).name')"
bindel = ,XF86MonBrightnessDown, exec, swayosd-client --brightness lower --monitor "$(hyprctl monitors -j | jq -r '.[] | select(.focused == true).name')"
bindel = ,XF86ScreenSaver, exec, wlogout
bindel = ,Menu, exec, wlogout
bind = $mainMod, o, exec, ~/.scripts/nightshift 4500
bind = SHIFT $mainMod, o, exec, ~/.scripts/nightshift 2500

# Requires playerctl
bindl = , XF86AudioNext, exec, swayosd-client --playerctl next --monitor "$(hyprctl monitors -j | jq -r '.[] | select(.focused == true).name')"
bindl = , XF86AudioPause, exec, swayosd-client --playerctl play-pause --monitor "$(hyprctl monitors -j | jq -r '.[] | select(.focused == true).name')"
bindl = , XF86AudioPlay, exec, swayosd-client --playerctl play-pause --monitor "$(hyprctl monitors -j | jq -r '.[] | select(.focused == true).name')"
bindl = , XF86AudioPrev, exec, swayosd-client --playerctl previous --monitor "$(hyprctl monitors -j | jq -r '.[] | select(.focused == true).name')"

